name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    concurrency: deploy-group # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"
    #   - uses: actions/setup-node@v4
    #     with:
    #       node-version: '20'
    #   - run: npm install
    #   - name: lint
    #     run: npm run eslint
    #   - name: build
    #     run: npm run build
    #   - name: test
    #     run: npm run test
    #   - name: install playwright browsers
    #     run: npx playwright install --with-deps
    #   - name: e2e test
    #     run: npm run test:e2e
    #   - uses: actions/upload-artifact@v4
    #     if: ${{ !cancelled() }}
    #     with:
    #       name: playwright-report
    #       path: playwright-report/
    #       retention-days: 30
    #   - name: get commit messages
    #     id: get_commit_messages
    #     run: |
    #       echo "commit_messages=$(git log -1 --pretty=%B)" >> $GITHUB_ENV
    #   - uses: superfly/flyctl-actions/setup-flyctl@master
    #   - name: deploy to fly.io
    #     if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(env.commit_messages, '#skip')}}
    #     run: flyctl deploy --remote-only
    #     env:
    #       FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
#   tag_release:
#     if: github.event.pull_request.merged == true && !contains(github.event.pull_request.title, '#skip')
#     needs: [simple_deployment_pipeline]
#     runs-on: ubuntu-20.04
#     permissions:
#       contents: write
#     steps:
#       - name: Set up git safe directory
#         run: git config --global --add safe.directory /github/workspace
#       - uses: actions/checkout@v4
#         with:
#           ref: ${{ github.event.pull_request.merge_commit_sha }}
#           fetch-depth: '0'
#       - name: bump version and push tag
#         uses: anothrNick/github-tag-action@1.70.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
#           WITH_V: true
#           DEFAULT_BUMP: patch
